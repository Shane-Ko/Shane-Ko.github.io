---
layout: post
title: "OOP - 객체지향언어"
date: 2024-02-16 14:12:00 +0900
description: You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. # Add post description (optional)
img: java_logo.png # Add image post (optional)
fig-caption: Java Logo #
tag: [Backend, Java]
---

객체지향언어는 (Object Oriented Language, OOP) 입력 받은 데이터들을 순서대로 처리하는 절차지향과는 다르게 객체를 중심으로 프로그래밍을 하는 언어를 뜻한다. 

 

***객체지향언어의 장점***

  1. 코드의 재사용성이 높다

      -새로운 코드를 작성 할 때 기존의 코드를 이용하여 쉽게 작성할 수 있다

 

  2. 코드의 관리가 용이하다.

      -코드간의 관계를 이용해서 적은 노력으로 쉽게 코드를 변경 할 수 있다.

 

  3. 신뢰성이 높은 프로그래밍을 가능하게 한다.

     -제어자와 메서드를 이용해서 데이터를 보호하고 올바른 값을 유지하도록 하며, 코드의 중복을 제거하여 코드의 불일치로 인한 오작동을 방지할 수 있다.

 

 

***클래스와 객체***

  클래스와 객체의 정의과 용도에 대해서 알아보자.

  우선 클래스란, "객체를 정의해놓는 곳" 혹은 "객체의 설계도" 라고 할 수 있다. 객체를 생성하기 위해서 클래스가 사용되며, 객체는 클래스에 정의된 대로 생성이 된다.

클래스의 정의: 객체를 정의해 놓은 곳이다.
클래스의 용도: 클래스는 객체를 생성하는데 사용된다.
 

  객체란, 쉽게 말해 우리가 주변에 볼 수 있는 Tv, 컴퓨터, 책상 등 "실제로 존재하는 것" 이라는 뜻을 가지고 있다. 객체지향이론에서는 앞서 말한 사물과 같은 유형적인것 뿐만 아니라, 개념이나 논리와 같은 추상적인 것들도 객체라고 한다.

객체의 정의: 실제로 존재하는것. 사물 또는 개념
객체의 용도: 객체가 가지고 있는 기능과 속성에 따라 달라진다.
형태가 있는 객체: Tv , 자동차 , 책상 등
형태가 없는 객체: 수학공식 , 논리 , 개념
  좀 더 쉽게 우리 실생활에 예를 들면 제품의 설계도와 제품의 관계라고 할 수 있는다. 컴퓨터 설계도(클래스)는 컴퓨터(객체)를 정의한 것이다. 즉 컴퓨터 설계도(클래스)를 통해 컴퓨터(객체)를 만들 수 있다. 

  또한 클래스는 단지 객체를 생성하는데 사용될 뿐이며,  객체 그 자체는 아니다. 우리가 원하는 기능의 객체를 사용하기 위해서는 먼저 클래스로 부터 객체를 생성하는 과정이 필요하다. 

  우리가 컴퓨터를 사용하기 위해서는 컴퓨터(객체)가 필요한 것이지, 컴퓨터 설계도(클래스)가 필요한 것이 아닌 것 처럼 클래스는 단지 객체를 만드는데만 사용된다.


![ex](/assets/img/oop-ex.png)
